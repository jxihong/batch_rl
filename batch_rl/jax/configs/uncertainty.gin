# Hyperparameters follow the classic Nature DQN, but we modify as necessary to
# match those used in Rainbow (Hessel et al., 2018), to ensure apples-to-apples
# comparison.
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import google3.experimental.users.jxihong.offline_rl_dopamine.fixed_replay
import batch_rl.jax.networks
import batch_rl.jax.agents.uncertainty_agent
import google3.experimental.users.jxihong.offline_rl_dopamine.fine_tuning.run_experiment

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 1
JaxDQNAgent.min_replay_history = 20000  # agent steps
JaxDQNAgent.update_period = 4
JaxDQNAgent.target_update_period = 8000  # agent steps
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 50000  # agent steps
JaxDQNAgent.summary_writing_frequency = 10000
JaxDQNAgent.min_replay_history = 32
# Note: We are using the Adam optimizer by default for JaxDQN, which differs
#       from the original NatureDQN and the dopamine TensorFlow version. In
#       the experiments we have ran, we have found that using Adam yields
#       improved training performance.
JaxDQNAgent.optimizer = 'adam'

FineTuningJaxUncertaintyAgent.delta_embedding_dim = 64
FineTuningJaxUncertaintyAgent.num_delta_samples = 64
FineTuningJaxUncertaintyAgent.num_delta_prime_samples = 16
FineTuningJaxUncertaintyAgent.dr3_alpha = 0.03
FineTuningJaxUncertaintyAgent.lcb_alpha = 0.1
FineTuningJaxUncertaintyAgent.offline_lcb_delta = 0.25
FineTuningJaxUncertaintyAgent.fine_tuning_lcb_delta = 0.1
FineTuningJaxUncertaintyAgent.offline_lcb_threshold = 0.9
FineTuningJaxUncertaintyAgent.offline_data_ratio = 0.0
FineTuningJaxUncertaintyAgent.fine_tuning_lr = 6.25e-5

FineTuningRunner.pretraining_iterations = 30
FineTuningRunner.pretraining_steps = 125_000

atari_lib.create_atari_environment.game_name = 'Pong'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True
create_agent.agent_name = 'jax_uncertainty'
create_agent.debug_mode = False
Runner.num_iterations = 10
Runner.training_steps = 250_000  # agent steps
Runner.evaluation_steps = 125000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

JaxFixedReplayBuffer.replay_capacity = 1000000
JaxFixedReplayBuffer.batch_size = 32
OutOfGraphReplayBuffer.replay_capacity = 1000000
OutOfGraphReplayBuffer.batch_size = 32